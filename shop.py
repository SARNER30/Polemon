from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from database import (
    get_user_coins,
    add_item_to_user,
    reduce_user_coins,
    get_user_items,
    get_available_trainers
)
from keyboards import (
    shop_main_kb,
    shop_items_kb,
    shop_trainers_kb,
    back_to_shop_kb,
    confirm_purchase_kb
)
from states import ShopStates

router = Router(name="shop")

# –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–µ—Ä–æ–≤ –∏ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
TRAINERS = {
    "brock": {
        "name": "–ë—Ä–æ–∫",
        "price": 500,
        "bonus": "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–∞—â–∏—Ç—É –≤—Å–µ—Ö –ø–æ–∫–µ–º–æ–Ω–æ–≤ –Ω–∞ 10%",
        "image": "brock.jpg"
    },
    "misty": {
        "name": "–ú–∏—Å—Ç–∏",
        "price": 600,
        "bonus": "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∞—Ç–∞–∫—É –≤–æ–¥–Ω—ã—Ö –ø–æ–∫–µ–º–æ–Ω–æ–≤ –Ω–∞ 15%",
        "image": "misty.jpg"
    },
    "oak": {
        "name": "–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä –û—É–∫",
        "price": 1000,
        "bonus": "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —à–∞–Ω—Å –ø–æ–∏–º–∫–∏ –ø–æ–∫–µ–º–æ–Ω–æ–≤ –Ω–∞ 20%",
        "image": "oak.jpg"
    }
}

@router.message(Command("shop"))
async def shop_main(message: Message):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞"""
    coins = await get_user_coins(message.from_user.id)
    await message.answer(
        f"üè™ –ú–∞–≥–∞–∑–∏–Ω –ü–æ–∫–µ–º–∞—Ä–∫–µ—Ç\n"
        f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {coins} –º–æ–Ω–µ—Ç\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
        reply_markup=shop_main_kb()
    )

@router.callback_query(F.data == "shop_trainers"))
async def show_trainers(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤"""
    user_trainers = await get_user_items(callback.from_user.id, item_type="trainer")
    available_trainers = await get_available_trainers(callback.from_user.id)
    
    text = "üèãÔ∏è‚Äç‚ôÇÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—Ä–µ–Ω–µ—Ä—ã:\n\n"
    for trainer_id, trainer in TRAINERS.items():
        owned = "‚úÖ" if trainer_id in user_trainers else "‚ùå"
        text += (
            f"{owned} {trainer['name']} - {trainer['price']} –º–æ–Ω–µ—Ç\n"
            f"–ë–æ–Ω—É—Å: {trainer['bonus']}\n\n"
        )
    
    await callback.message.edit_text(
        text,
        reply_markup=shop_trainers_kb(available_trainers)
    )

@router.callback_query(F.data.startswith("trainer_"))
async def select_trainer(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏"""
    trainer_id = callback.data.split("_")[1]
    trainer = TRAINERS.get(trainer_id)
    
    if not trainer:
        return await callback.answer("–¢—Ä–µ–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
    
    await state.update_data(selected_trainer=trainer_id)
    
    await callback.message.edit_text(
        f"üèãÔ∏è‚Äç‚ôÇÔ∏è –¢—Ä–µ–Ω–µ—Ä: {trainer['name']}\n"
        f"üíµ –¶–µ–Ω–∞: {trainer['price']} –º–æ–Ω–µ—Ç\n"
        f"‚ú® –ë–æ–Ω—É—Å: {trainer['bonus']}\n\n"
        "–•–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —ç—Ç–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞?",
        reply_markup=confirm_purchase_kb(trainer_id)
    )

@router.callback_query(F.data.startswith("confirm_trainer_"))
async def buy_trainer(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ —Ç—Ä–µ–Ω–µ—Ä–∞"""
    trainer_id = callback.data.split("_")[2]
    trainer = TRAINERS.get(trainer_id)
    user_coins = await get_user_coins(callback.from_user.id)
    
    if not trainer:
        return await callback.answer("–¢—Ä–µ–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
    
    if user_coins < trainer['price']:
        return await callback.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç", show_alert=True)
    
    # –ü–æ–∫—É–ø–∫–∞ —Ç—Ä–µ–Ω–µ—Ä–∞
    await reduce_user_coins(callback.from_user.id, trainer['price'])
    await add_item_to_user(callback.from_user.id, trainer_id, "trainer")
    
    await callback.message.edit_text(
        f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Ç—Ä–µ–Ω–µ—Ä–∞ {trainer['name']}!\n"
        f"–¢–µ–ø–µ—Ä—å –≤–∞—à –±–æ–Ω—É—Å: {trainer['bonus']}",
        reply_markup=back_to_shop_kb()
    )
    await state.clear()

@router.callback_query(F.data == "back_to_shop"))
async def back_to_shop(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞"""
    coins = await get_user_coins(callback.from_user.id)
    await callback.message.edit_text(
        f"üè™ –ú–∞–≥–∞–∑–∏–Ω –ü–æ–∫–µ–º–∞—Ä–∫–µ—Ç\n"
        f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {coins} –º–æ–Ω–µ—Ç",
        reply_markup=shop_main_kb()
    )